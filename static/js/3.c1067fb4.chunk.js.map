{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","className","style","descriptionBlock","photos","small","fullName","Preloader","Post","item","message","likeCount","MyPosts","React","memo","postsElement","posts","reverse","map","post","postBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","requiredField","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","updateUserStatus","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c1067fb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1W9tF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__1vwYL\",\"posts\":\"MyPosts_posts__YK5Ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YJ9O\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    //hook local state\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}> {props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://farm66.static.flickr.com/65535/48752283542_2960cf0e67_b.jpg'/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n\r\n                <img src={props.profile.photos.small}/>\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            </div>\r\n            <div>{props.profile.fullName}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={style.item}>\r\n            <img src='https://404store.com/2019/09/15/wildlifeclup-20190915-0003.jpg' />\r\n            \r\n            { props.message }\r\n\r\n            <div>\r\n                <span>Like { props.likeCount }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement = [...props.posts]\r\n        .reverse().map(post => <Post message={post.message} likeCount={post.likeCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.postBlock}>\r\n            <h3>My post</h3>\r\n\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n\r\n            <div className={style.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostText'\r\n                       placeholder='Add my post'\r\n                       validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm ({form: 'profileAddPostForm'})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}