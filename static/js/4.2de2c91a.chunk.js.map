{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","Textarea","Element","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","requiredField","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","key","messagesElement","messages","mess","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcpMC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,QACvC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCEvBC,EATC,SAACT,GAEb,OACI,yBAAKG,UAAWC,IAAMM,SAChBV,EAAMU,U,kCCFdC,EAAcC,YAAiB,IAC/BC,EAAWC,YAAQ,YAmBVC,cAAW,CAACC,KAAM,wBAAlBD,EAjBQ,SAACf,GAEpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWP,EACXL,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAeZ,MAErC,6BACI,6CCYDa,EAzBC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMsB,IAAKzB,EAAOH,GAAIA,GAAIG,EAAOH,QACvG6B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAI,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAKvB,QAASoB,IAAKG,EAAK/B,QAM3F,OACI,yBAAKC,UAAWC,IAAMwB,SAClB,yBAAKzB,UAAWC,IAAM8B,cACjBP,GAGL,yBAAKxB,UAAWC,IAAM4B,UAClB,6BAAMD,IAEV,kBAAC,EAAD,CAAgBd,SAbJ,SAACkB,GACjBnC,EAAMoC,YAAYD,EAAOE,qB,gDCV7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCgBRE,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDPR,SAACQ,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK/C,MAAMuC,OAET,kBAACM,EAAcE,KAAK/C,OAFI,kBAAC,IAAD,CAAUO,GAAI,eAJV,GAEXyC,IAAMH,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCE9DL,CAGbjB","file":"static/js/4.2de2c91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__hGjv3\",\"dialogsItems\":\"Dialogs_dialogsItems__lT_9f\",\"active\":\"Dialogs_active__2q2H0\",\"dialog\":\"Dialogs_dialog__28Tam\",\"messages\":\"Dialogs_messages__yajg1\",\"message\":\"Dialogs_message__UD_j2\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={style.message}>\r\n            { props.message }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newMessageBody'\r\n                       placeholder='Enter your message'\r\n                       validate={[requiredField, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm ({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\n","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElement = state.messages.map(mess => <Message message={mess.message} key={mess.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                <div>{messagesElement}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n//HOC\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n};","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}